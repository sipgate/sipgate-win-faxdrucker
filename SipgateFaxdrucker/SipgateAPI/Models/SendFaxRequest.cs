// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

using Microsoft.Rest;
using Newtonsoft.Json;

namespace SipgateFaxdrucker.SipgateAPI.Models
{
    public partial class SendFaxRequest
    {
        /// <summary>
        /// Initializes a new instance of the SendFaxRequest class.
        /// </summary>
        public SendFaxRequest() { }

        /// <summary>
        /// Initializes a new instance of the SendFaxRequest class.
        /// </summary>
        public SendFaxRequest(string faxlineId, string recipient, string filename, string base64Content)
        {
            FaxlineId = faxlineId;
            Recipient = recipient;
            Filename = filename;
            Base64Content = base64Content;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "faxlineId")]
        public string FaxlineId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "recipient")]
        public string Recipient { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "filename")]
        public string Filename { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "base64Content")]
        public string Base64Content { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (FaxlineId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FaxlineId");
            }
            if (Recipient == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Recipient");
            }
            if (Filename == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Filename");
            }
            if (Base64Content == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Base64Content");
            }
            if (this.Base64Content != null)
            {
                if (this.Base64Content.Length > 28330000)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Base64Content", 28330000);
                }
                if (this.Base64Content.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Base64Content", 0);
                }
            }
            
        }
        public override string ToString()
        {
            return JsonConvert.SerializeObject(this);
        }
    }
}
